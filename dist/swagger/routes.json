{
    "routes": [
        {
            "path": "/api/appsetting/list",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/appsetting/get-by-id",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": [
                        "body",
                        "params"
                    ],
                    "isString": {
                        "errorMessage": [
                            "isString",
                            "id is invalid"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/appsetting/add",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "company": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Company id must be provided"
                        ]
                    }
                },
                "location": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Location id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/appsetting/update",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/appsetting/remove",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/appsetting/get-by-location",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "location": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Location id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/appsetting/update-api",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Id must be provided"
                        ]
                    }
                },
                "authorizeApi": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "authorizeApi must be provided"
                        ]
                    }
                },
                "employeeListApi": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "employeeListApi must be provided"
                        ]
                    }
                },
                "employeeDetailApi": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "employeeDetailApi must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/appsetting/update-default-settings",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/appsetting/list-icons",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/appsetting",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                },
                {
                    "name": "get-by-id",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": [
                                "body",
                                "params"
                            ],
                            "isString": {
                                "errorMessage": [
                                    "isString",
                                    "Id is invalid"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "add",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "company": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Company id must be provided"
                                ]
                            }
                        },
                        "location": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Location id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "update",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "remove",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                },
                {
                    "name": "get-by-location",
                    "type": "POST",
                    "validationSchema": {
                        "location": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Location id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "update-api",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Id must be provided"
                                ]
                            }
                        },
                        "authorizeApi": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "authorizeApi must be provided"
                                ]
                            }
                        },
                        "employeeListApi": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "employeeListApi must be provided"
                                ]
                            }
                        },
                        "employeeDetailApi": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "employeeDetailApi must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "update-default-settings",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "list-icons",
                    "type": "POST"
                }
            ]
        },
        {
            "path": "/api/appleaccount/add",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/appleaccount",
            "method": "POST",
            "methods": [
                {
                    "name": "add",
                    "type": "POST"
                }
            ]
        },
        {
            "path": "/api/approvalflow/list",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/approvalflow/get-by-id",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": [
                        "body",
                        "params"
                    ],
                    "isString": {
                        "errorMessage": [
                            "isString",
                            "Id is invalid"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/approvalflow/get-active",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/approvalflow/add",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/approvalflow/remove",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/approvalflow/active",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/approvalflow/update",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/approvalflow",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                },
                {
                    "name": "get-by-id",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": [
                                "body",
                                "params"
                            ],
                            "isString": {
                                "errorMessage": [
                                    "isString",
                                    "Id is invalid"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "get-active",
                    "type": "POST"
                },
                {
                    "name": "add",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                },
                {
                    "name": "remove",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                },
                {
                    "name": "active",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                },
                {
                    "name": "update",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                }
            ]
        },
        {
            "path": "/api/attachments/upload-image",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/attachments/upload",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/attachments/upload-language",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/attachments/:id/:filename",
            "method": "GET",
            "authorized": false
        },
        {
            "path": "/api/images/:id/:filename",
            "method": "GET",
            "authorized": false,
            "isRoot": true
        },
        {
            "path": "/api/attachments",
            "method": "POST",
            "methods": [
                {
                    "name": "upload-image",
                    "type": "POST",
                    "middleware": [
                        null
                    ]
                },
                {
                    "name": "upload",
                    "type": "POST",
                    "middleware": [
                        null
                    ]
                },
                {
                    "name": "upload-language",
                    "type": "POST",
                    "middleware": [
                        null
                    ]
                },
                {
                    "name": ":id/:filename",
                    "type": "GET",
                    "authorized": false
                },
                {
                    "name": "images/:id/:filename",
                    "isRoot": true,
                    "authorized": false,
                    "type": "GET"
                }
            ]
        },
        {
            "path": "/api/company/list",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/company/get-by-id",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": [
                        "body",
                        "params"
                    ],
                    "isString": {
                        "errorMessage": [
                            "isString",
                            "Id is invalid"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/company/add",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/company/update",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/company/update-profile",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/company/remove",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/company/active",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/company/inactive",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/company/summary",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/company",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                },
                {
                    "name": "get-by-id",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": [
                                "body",
                                "params"
                            ],
                            "isString": {
                                "errorMessage": [
                                    "isString",
                                    "Id is invalid"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "add",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                },
                {
                    "name": "update",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "update-profile",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cga"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "remove",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                },
                {
                    "name": "active",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "inactive",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "summary",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                }
            ]
        },
        {
            "path": "/api/country/list",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/country/get-by-id",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Code of country must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/country/add",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/country/update",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Code of country must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/country/remove",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/country/active",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/country/inactive",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/country/update-from-api",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/country",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST"
                },
                {
                    "name": "get-by-id",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Code of country must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "add",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                },
                {
                    "name": "update",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Code of country must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "remove",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "active",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "inactive",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "update-from-api",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                }
            ]
        },
        {
            "path": "/api/credit-card/list",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "q": {
                    "in": "body",
                    "isString": {
                        "errorMessage": [
                            "isString",
                            "'q' must be string"
                        ]
                    },
                    "optional": true
                }
            }
        },
        {
            "path": "/api/credit-card/list-for-employee",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/credit-card/list-all",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/credit-card/list-assign",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/credit-card/get-by-user",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/credit-card/get-by-id",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "ID must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/credit-card/add",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/credit-card/update",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "custom": {
                        "errorMessage": [
                            "isObjectID",
                            "Invalid ID. The ID must be ObjectID"
                        ]
                    },
                    "customSanitizer": {}
                }
            }
        },
        {
            "path": "/api/credit-card/remove",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "custom": {
                        "errorMessage": [
                            "isObjectID",
                            "Invalid ID. The ID must be ObjectID"
                        ]
                    },
                    "customSanitizer": {}
                }
            }
        },
        {
            "path": "/api/credit-card/active",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/credit-card/inactive",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/credit-card",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST",
                    "validationSchema": {
                        "q": {
                            "in": "body",
                            "isString": {
                                "errorMessage": [
                                    "isString",
                                    "'q' must be string"
                                ]
                            },
                            "optional": true
                        }
                    }
                },
                {
                    "name": "list-for-employee",
                    "type": "POST"
                },
                {
                    "name": "list-all",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                },
                {
                    "name": "list-assign",
                    "type": "POST"
                },
                {
                    "name": "get-by-user",
                    "type": "POST"
                },
                {
                    "name": "get-by-id",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "ID must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "add",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                },
                {
                    "name": "update",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "custom": {
                                "errorMessage": [
                                    "isObjectID",
                                    "Invalid ID. The ID must be ObjectID"
                                ]
                            },
                            "customSanitizer": {}
                        }
                    }
                },
                {
                    "name": "remove",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "custom": {
                                "errorMessage": [
                                    "isObjectID",
                                    "Invalid ID. The ID must be ObjectID"
                                ]
                            },
                            "customSanitizer": {}
                        }
                    }
                },
                {
                    "name": "active",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "inactive",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "id must be provided"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        {
            "path": "/api/currency/list",
            "method": "POST",
            "authorized": false
        },
        {
            "path": "/api/currency/get-support-currencies",
            "method": "GET",
            "authorized": false,
            "validationSchema": {
                "q": {
                    "isString": {
                        "errorMessage": [
                            "isString",
                            "Query string is invalid"
                        ]
                    },
                    "optional": true
                }
            }
        },
        {
            "path": "/api/currency/get-by-id",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Code of currency must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/currency/add",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/currency/update",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Code of currency must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/currency/remove",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/currency/active",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/currency/inactive",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/currency/init-currencies",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/currency",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "authorized": false,
                    "type": "POST"
                },
                {
                    "name": "get-support-currencies",
                    "type": "GET",
                    "authorized": false,
                    "validationSchema": {
                        "q": {
                            "isString": {
                                "errorMessage": [
                                    "isString",
                                    "Query string is invalid"
                                ]
                            },
                            "optional": true
                        }
                    }
                },
                {
                    "name": "get-by-id",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Code of currency must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "add",
                    "type": "POST"
                },
                {
                    "name": "update",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Code of currency must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "remove",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "active",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "inactive",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "init-currencies",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                }
            ]
        },
        {
            "path": "/api/customer/list",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "location": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "location must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/customer/get-by-id",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": [
                        "body",
                        "params"
                    ],
                    "isString": {
                        "errorMessage": [
                            "isString",
                            "Id is invalid"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/customer/add",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/customer/update",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/customer/active",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "ID must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/customer/inactive",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "ID must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/customer",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "location": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "location must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "get-by-id",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": [
                                "body",
                                "params"
                            ],
                            "isString": {
                                "errorMessage": [
                                    "isString",
                                    "Id is invalid"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "add",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                },
                {
                    "name": "update",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "active",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "ID must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "inactive",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "ID must be provided"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        {
            "path": "/api/database/sync-enterprise",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/database/list-all-collection",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "security": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "security must be provided"
                        ]
                    }
                },
                "collection": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "collection must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/database",
            "method": "POST",
            "methods": [
                {
                    "name": "sync-enterprise",
                    "type": "POST"
                },
                {
                    "name": "list-all-collection",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "security": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "security must be provided"
                                ]
                            }
                        },
                        "collection": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "collection must be provided"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        {
            "path": "/api/exchange/get-rate",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "fr": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "The origin (fr) must be provided"
                        ]
                    },
                    "in": "body"
                },
                "to": {
                    "exists": {
                        "errorMessage": [
                            "requried",
                            "The destination (to) must be provided"
                        ]
                    },
                    "in": "body"
                },
                "date": {
                    "in": "body",
                    "optional": true,
                    "customSanitizer": {},
                    "custom": {
                        "errorMessage": [
                            "isDate",
                            "Date is invalid"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/exchange/fetch",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/exchange/get-support-exchange",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/exchange",
            "method": "POST",
            "methods": [
                {
                    "name": "get-rate",
                    "type": "POST",
                    "validationSchema": {
                        "fr": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "The origin (fr) must be provided"
                                ]
                            },
                            "in": "body"
                        },
                        "to": {
                            "exists": {
                                "errorMessage": [
                                    "requried",
                                    "The destination (to) must be provided"
                                ]
                            },
                            "in": "body"
                        },
                        "date": {
                            "in": "body",
                            "optional": true,
                            "customSanitizer": {},
                            "custom": {
                                "errorMessage": [
                                    "isDate",
                                    "Date is invalid"
                                ]
                            }
                        }
                    }
                },
                {
                    "type": "POST",
                    "name": "fetch",
                    "possiblePers": [
                        "admin-cla"
                    ]
                },
                {
                    "type": "POST",
                    "name": "get-support-exchange"
                }
            ]
        },
        {
            "path": "/api/bill/submit",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "date": {
                    "in": "body",
                    "optional": true,
                    "customSanitizer": {},
                    "custom": {
                        "errorMessage": [
                            "isDate",
                            "Date is invalid"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/bill/update",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "date": {
                    "in": "body",
                    "optional": true,
                    "customSanitizer": {},
                    "custom": {
                        "errorMessage": [
                            "isDate",
                            "Date is invalid"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/bill/delete",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "expenseID": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "expenseID must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/bill/get-by-id",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/bill/list",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/bill/list-by-current-user",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/bill/get-by-user",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/bill/summary",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/bill/summary-by-project",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/bill/summary-by-tag",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/bill/list-delete",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "ids": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "ids must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/bill",
            "method": "POST",
            "methods": [
                {
                    "name": "submit",
                    "type": "POST",
                    "body": [
                        {
                            "name": "reimbursable",
                            "type": "Boolean"
                        },
                        {
                            "name": "date",
                            "type": "Date"
                        },
                        {
                            "name": "amount",
                            "type": "Number"
                        },
                        {
                            "name": "status",
                            "type": "String"
                        },
                        {
                            "name": "category",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "type": "Embedded"
                        },
                        {
                            "name": "tag",
                            "type": "ObjectID",
                            "ref": "Tag"
                        },
                        {
                            "name": "creditCard",
                            "type": "ObjectID",
                            "ref": "CreditCard"
                        },
                        {
                            "name": "company",
                            "type": "ObjectID",
                            "ref": "Company"
                        }
                    ],
                    "validationSchema": {
                        "date": {
                            "in": "body",
                            "optional": true,
                            "customSanitizer": {},
                            "custom": {
                                "errorMessage": [
                                    "isDate",
                                    "Date is invalid"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "update",
                    "type": "POST",
                    "body": [
                        {
                            "name": "expenseID"
                        },
                        {
                            "name": "reimbursable",
                            "type": "Boolean"
                        },
                        {
                            "name": "date",
                            "type": "Date"
                        },
                        {
                            "name": "amount",
                            "type": "Number"
                        },
                        {
                            "name": "status",
                            "type": "String"
                        },
                        {
                            "name": "category",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "type": "Embedded"
                        },
                        {
                            "name": "tag",
                            "type": "ObjectID",
                            "ref": "Tag"
                        },
                        {
                            "name": "creditCard",
                            "type": "ObjectID",
                            "ref": "CreditCard"
                        },
                        {
                            "name": "company",
                            "type": "ObjectID",
                            "ref": "Company"
                        }
                    ],
                    "validationSchema": {
                        "date": {
                            "in": "body",
                            "optional": true,
                            "customSanitizer": {},
                            "custom": {
                                "errorMessage": [
                                    "isDate",
                                    "Date is invalid"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "delete",
                    "type": "POST",
                    "body": [
                        {
                            "name": "expenseID"
                        }
                    ],
                    "validationSchema": {
                        "expenseID": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "expenseID must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "get-by-id",
                    "type": "POST",
                    "body": [
                        {
                            "name": "expenseID"
                        }
                    ]
                },
                {
                    "name": "list",
                    "type": "POST"
                },
                {
                    "name": "list-by-current-user",
                    "type": "POST",
                    "body": [
                        {
                            "name": "reimbursable",
                            "type": "Boolean"
                        },
                        {
                            "name": "date",
                            "type": "Date"
                        },
                        {
                            "name": "amount",
                            "type": "Number"
                        },
                        {
                            "name": "status",
                            "type": "String"
                        },
                        {
                            "name": "category",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "type": "Embedded"
                        },
                        {
                            "name": "tag",
                            "type": "ObjectID",
                            "ref": "Tag"
                        },
                        {
                            "name": "creditCard",
                            "type": "ObjectID",
                            "ref": "CreditCard"
                        },
                        {
                            "name": "company",
                            "type": "ObjectID",
                            "ref": "Company"
                        }
                    ]
                },
                {
                    "name": "get-by-user",
                    "type": "POST",
                    "body": [
                        {
                            "name": "reimbursable",
                            "type": "Boolean"
                        },
                        {
                            "name": "date",
                            "type": "Date"
                        },
                        {
                            "name": "amount",
                            "type": "Number"
                        },
                        {
                            "name": "status",
                            "type": "String"
                        },
                        {
                            "name": "category",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "type": "Embedded"
                        },
                        {
                            "name": "tag",
                            "type": "ObjectID",
                            "ref": "Tag"
                        },
                        {
                            "name": "creditCard",
                            "type": "ObjectID",
                            "ref": "CreditCard"
                        },
                        {
                            "name": "company",
                            "type": "ObjectID",
                            "ref": "Company"
                        }
                    ]
                },
                {
                    "name": "summary",
                    "type": "POST"
                },
                {
                    "name": "summary-by-project",
                    "type": "POST"
                },
                {
                    "name": "summary-by-tag",
                    "type": "POST"
                },
                {
                    "name": "list-delete",
                    "type": "POST",
                    "body": [
                        {
                            "name": "ids"
                        }
                    ],
                    "validationSchema": {
                        "ids": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "ids must be provided"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        {
            "path": "/api/facebookaccount/add",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/facebookaccount",
            "method": "POST",
            "methods": [
                {
                    "name": "add",
                    "type": "POST"
                }
            ]
        },
        {
            "path": "/api/financeteam/list",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/financeteam/get-by-id",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": [
                        "body",
                        "params"
                    ],
                    "isString": {
                        "errorMessage": [
                            "isString",
                            "Id is invalid"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/financeteam/add",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/financeteam/update",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/financeteam/remove",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/financeteam/active",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/financeteam/inactive",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/financeteam",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                },
                {
                    "name": "get-by-id",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": [
                                "body",
                                "params"
                            ],
                            "isString": {
                                "errorMessage": [
                                    "isString",
                                    "Id is invalid"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "add",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                },
                {
                    "name": "update",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "remove",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                },
                {
                    "name": "active",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                },
                {
                    "name": "inactive",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                }
            ]
        },
        {
            "path": "/api/login",
            "method": "POST",
            "authorized": false,
            "isRoot": true,
            "validationSchema": {
                "email": {
                    "normalizeEmail": true,
                    "isEmail": {
                        "errorMessage": [
                            "isEmail",
                            "Please provide a valid email."
                        ]
                    },
                    "isLength": {
                        "options": {
                            "max": 255
                        },
                        "errorMessage": [
                            "max",
                            255,
                            "Email must be contained the most {max} characters."
                        ]
                    }
                },
                "password": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Password must be provided."
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/login-client",
            "method": "POST",
            "authorized": false,
            "isRoot": true,
            "validationSchema": {
                "email": {
                    "normalizeEmail": true,
                    "isEmail": {
                        "errorMessage": [
                            "isEmail",
                            "Please provide a valid email."
                        ]
                    },
                    "isLength": {
                        "options": {
                            "max": 255
                        },
                        "errorMessage": [
                            "max",
                            255,
                            "Email must be contained the most {max} characters."
                        ]
                    }
                },
                "password": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Password must be provided."
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/login-fb",
            "method": "POST",
            "authorized": false,
            "isRoot": true
        },
        {
            "path": "/api/login-apple",
            "method": "POST",
            "authorized": false,
            "isRoot": true,
            "validationSchema": {
                "email": {
                    "normalizeEmail": true,
                    "isEmail": {
                        "errorMessage": [
                            "isEmail",
                            "Please provide a valid email."
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/refresh-token",
            "method": "POST",
            "ignoreExpiration": true,
            "authorized": true,
            "isRoot": true
        },
        {
            "path": "/api/sign-in",
            "method": "POST",
            "authorized": false,
            "isRoot": true,
            "validationSchema": {
                "email": {
                    "normalizeEmail": true,
                    "isEmail": {
                        "errorMessage": [
                            "isEmail",
                            "Please provide a valid email."
                        ]
                    },
                    "isLength": {
                        "options": {
                            "max": 255
                        },
                        "errorMessage": [
                            "max",
                            255,
                            "Email must be contained the most {max} characters."
                        ]
                    }
                },
                "password": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Password must be provided."
                        ]
                    }
                },
                "companyCode": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Company code must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/sign-up",
            "method": "POST",
            "authorized": false,
            "isRoot": true,
            "validationSchema": {
                "email": {
                    "normalizeEmail": true,
                    "isEmail": {
                        "errorMessage": "Please provide a valid email."
                    },
                    "isLength": {
                        "options": {
                            "max": 255
                        },
                        "errorMessage": [
                            "max",
                            255,
                            "Email must be contained the most {max} characters."
                        ]
                    }
                },
                "password": {
                    "isString": {
                        "errorMessage": [
                            "required",
                            "Password must be provided."
                        ]
                    },
                    "isLength": {
                        "options": {
                            "min": 6
                        },
                        "errorMessage": [
                            "min",
                            6,
                            "Password must be contained at least {min} characters."
                        ]
                    }
                },
                "firstName": {
                    "isString": {
                        "errorMessage": [
                            "isString",
                            "Please provide a valid first name."
                        ]
                    },
                    "trim": {
                        "options": " "
                    },
                    "isLength": {
                        "options": {
                            "max": 50
                        },
                        "errorMessage": [
                            "max",
                            50,
                            "First name must be contained the most {max} characters."
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/password/recover",
            "method": "POST",
            "authorized": false,
            "isRoot": true,
            "validationSchema": {
                "email": {
                    "normalizeEmail": true,
                    "isEmail": {
                        "errorMessage": [
                            "isEmail",
                            "Please provide a valid email."
                        ]
                    },
                    "isLength": {
                        "options": {
                            "max": 255
                        },
                        "errorMessage": [
                            "max",
                            255,
                            "Email must be contained the most {max} characters."
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/password/reset",
            "method": "POST",
            "authorized": false,
            "isRoot": true,
            "validationSchema": {
                "password": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Password must be provided."
                        ]
                    },
                    "isLength": {
                        "options": {
                            "min": 6
                        },
                        "errorMessage": [
                            "min",
                            6,
                            "Password must be contained at least {min} characters."
                        ]
                    }
                },
                "code": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "code must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/password/update",
            "method": "POST",
            "authorized": true,
            "isRoot": true,
            "validationSchema": {
                "newPassword": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Password must be provided."
                        ]
                    },
                    "isLength": {
                        "options": {
                            "min": 6
                        },
                        "errorMessage": [
                            "min",
                            6,
                            "Password must be contained at least {min} characters."
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/redirect/:path",
            "method": "GET",
            "authorized": false,
            "isRoot": true
        },
        {
            "path": "/api/sign-up-admin",
            "method": "POST",
            "authorized": false,
            "isRoot": true
        },
        {
            "path": "/api/sign-up-valid-company",
            "method": "POST",
            "authorized": false,
            "isRoot": true,
            "validationSchema": {
                "name": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Company Name must be provided"
                        ]
                    }
                },
                "address": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Company Address must be provided"
                        ]
                    }
                },
                "phone": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Company Phone must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/sign-up-valid-location",
            "method": "POST",
            "authorized": false,
            "isRoot": true,
            "validationSchema": {
                "name": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Location Name must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/sign-up-valid-admin",
            "method": "POST",
            "authorized": false,
            "isRoot": true,
            "validationSchema": {
                "email": {
                    "normalizeEmail": true,
                    "isEmail": {
                        "errorMessage": "Please provide a valid email."
                    },
                    "isLength": {
                        "options": {
                            "max": 255
                        },
                        "errorMessage": [
                            "max",
                            255,
                            "Email must be contained the most {max} characters."
                        ]
                    }
                },
                "firstName": {
                    "isString": {
                        "errorMessage": [
                            "isString",
                            "Please provide a valid first name."
                        ]
                    },
                    "trim": {
                        "options": " "
                    },
                    "isLength": {
                        "options": {
                            "max": 50
                        },
                        "errorMessage": [
                            "max",
                            50,
                            "First name must be contained the most {max} characters."
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/global",
            "method": "POST",
            "methods": [
                {
                    "name": "login",
                    "isRoot": true,
                    "authorized": false,
                    "type": "POST",
                    "validationSchema": {
                        "email": {
                            "normalizeEmail": true,
                            "isEmail": {
                                "errorMessage": [
                                    "isEmail",
                                    "Please provide a valid email."
                                ]
                            },
                            "isLength": {
                                "options": {
                                    "max": 255
                                },
                                "errorMessage": [
                                    "max",
                                    255,
                                    "Email must be contained the most {max} characters."
                                ]
                            }
                        },
                        "password": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Password must be provided."
                                ]
                            }
                        }
                    },
                    "swagger": [
                        {
                            "name": "email",
                            "type": "email",
                            "required": true
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "required": true
                        }
                    ]
                },
                {
                    "name": "login-client",
                    "isRoot": true,
                    "authorized": false,
                    "type": "POST",
                    "validationSchema": {
                        "email": {
                            "normalizeEmail": true,
                            "isEmail": {
                                "errorMessage": [
                                    "isEmail",
                                    "Please provide a valid email."
                                ]
                            },
                            "isLength": {
                                "options": {
                                    "max": 255
                                },
                                "errorMessage": [
                                    "max",
                                    255,
                                    "Email must be contained the most {max} characters."
                                ]
                            }
                        },
                        "password": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Password must be provided."
                                ]
                            }
                        }
                    },
                    "swagger": [
                        {
                            "name": "email",
                            "type": "email",
                            "required": true
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "required": true
                        }
                    ]
                },
                {
                    "name": "login-fb",
                    "isRoot": true,
                    "type": "POST",
                    "authorized": false,
                    "swagger": [
                        {
                            "name": "fbId",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "accessToken",
                            "type": "string",
                            "required": true
                        }
                    ]
                },
                {
                    "name": "login-apple",
                    "isRoot": true,
                    "type": "POST",
                    "authorized": false,
                    "validationSchema": {
                        "email": {
                            "normalizeEmail": true,
                            "isEmail": {
                                "errorMessage": [
                                    "isEmail",
                                    "Please provide a valid email."
                                ]
                            }
                        }
                    },
                    "swagger": [
                        {
                            "name": "user",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "identityToken",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "authorizationCode",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "email",
                            "type": "string",
                            "required": true
                        },
                        {
                            "name": "fullName",
                            "type": "object"
                        }
                    ]
                },
                {
                    "name": "refresh-token",
                    "isRoot": true,
                    "type": "POST",
                    "authorized": true,
                    "ignoreExpiration": true
                },
                {
                    "name": "sign-in",
                    "isRoot": true,
                    "type": "POST",
                    "authorized": false,
                    "validationSchema": {
                        "email": {
                            "normalizeEmail": true,
                            "isEmail": {
                                "errorMessage": [
                                    "isEmail",
                                    "Please provide a valid email."
                                ]
                            },
                            "isLength": {
                                "options": {
                                    "max": 255
                                },
                                "errorMessage": [
                                    "max",
                                    255,
                                    "Email must be contained the most {max} characters."
                                ]
                            }
                        },
                        "password": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Password must be provided."
                                ]
                            }
                        },
                        "companyCode": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Company code must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "sign-up",
                    "isRoot": true,
                    "type": "POST",
                    "authorized": false,
                    "validationSchema": {
                        "email": {
                            "normalizeEmail": true,
                            "isEmail": {
                                "errorMessage": "Please provide a valid email."
                            },
                            "isLength": {
                                "options": {
                                    "max": 255
                                },
                                "errorMessage": [
                                    "max",
                                    255,
                                    "Email must be contained the most {max} characters."
                                ]
                            }
                        },
                        "password": {
                            "isString": {
                                "errorMessage": [
                                    "required",
                                    "Password must be provided."
                                ]
                            },
                            "isLength": {
                                "options": {
                                    "min": 6
                                },
                                "errorMessage": [
                                    "min",
                                    6,
                                    "Password must be contained at least {min} characters."
                                ]
                            }
                        },
                        "firstName": {
                            "isString": {
                                "errorMessage": [
                                    "isString",
                                    "Please provide a valid first name."
                                ]
                            },
                            "trim": {
                                "options": " "
                            },
                            "isLength": {
                                "options": {
                                    "max": 50
                                },
                                "errorMessage": [
                                    "max",
                                    50,
                                    "First name must be contained the most {max} characters."
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "password/recover",
                    "isRoot": true,
                    "type": "POST",
                    "authorized": false,
                    "validationSchema": {
                        "email": {
                            "normalizeEmail": true,
                            "isEmail": {
                                "errorMessage": [
                                    "isEmail",
                                    "Please provide a valid email."
                                ]
                            },
                            "isLength": {
                                "options": {
                                    "max": 255
                                },
                                "errorMessage": [
                                    "max",
                                    255,
                                    "Email must be contained the most {max} characters."
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "password/reset",
                    "isRoot": true,
                    "type": "POST",
                    "authorized": false,
                    "validationSchema": {
                        "password": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Password must be provided."
                                ]
                            },
                            "isLength": {
                                "options": {
                                    "min": 6
                                },
                                "errorMessage": [
                                    "min",
                                    6,
                                    "Password must be contained at least {min} characters."
                                ]
                            }
                        },
                        "code": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "code must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "password/update",
                    "isRoot": true,
                    "type": "POST",
                    "authorized": true,
                    "validationSchema": {
                        "newPassword": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Password must be provided."
                                ]
                            },
                            "isLength": {
                                "options": {
                                    "min": 6
                                },
                                "errorMessage": [
                                    "min",
                                    6,
                                    "Password must be contained at least {min} characters."
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "redirect/:path",
                    "isRoot": true,
                    "type": "GET",
                    "authorized": false
                },
                {
                    "name": "sign-up-admin",
                    "type": "POST",
                    "isRoot": true,
                    "authorized": false
                },
                {
                    "name": "sign-up-valid-company",
                    "type": "POST",
                    "isRoot": true,
                    "authorized": false,
                    "validationSchema": {
                        "name": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Company Name must be provided"
                                ]
                            }
                        },
                        "address": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Company Address must be provided"
                                ]
                            }
                        },
                        "phone": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Company Phone must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "sign-up-valid-location",
                    "type": "POST",
                    "isRoot": true,
                    "authorized": false,
                    "validationSchema": {
                        "name": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Location Name must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "sign-up-valid-admin",
                    "type": "POST",
                    "isRoot": true,
                    "authorized": false,
                    "validationSchema": {
                        "email": {
                            "normalizeEmail": true,
                            "isEmail": {
                                "errorMessage": "Please provide a valid email."
                            },
                            "isLength": {
                                "options": {
                                    "max": 255
                                },
                                "errorMessage": [
                                    "max",
                                    255,
                                    "Email must be contained the most {max} characters."
                                ]
                            }
                        },
                        "firstName": {
                            "isString": {
                                "errorMessage": [
                                    "isString",
                                    "Please provide a valid first name."
                                ]
                            },
                            "trim": {
                                "options": " "
                            },
                            "isLength": {
                                "options": {
                                    "max": 50
                                },
                                "errorMessage": [
                                    "max",
                                    50,
                                    "First name must be contained the most {max} characters."
                                ]
                            }
                        }
                    }
                }
            ]
        },
        {
            "path": "/api/history/list",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "before": {
                    "in": "body",
                    "optional": true,
                    "toDate": true,
                    "custom": {
                        "errorMessage": [
                            "isDate",
                            "The value of before argument is not a valid date and time value."
                        ]
                    }
                },
                "after": {
                    "in": "body",
                    "optional": true,
                    "toDate": true,
                    "custom": {
                        "errorMessage": [
                            "isDate",
                            "The value of before argument is not a valid date and time value."
                        ]
                    }
                },
                "limit": {
                    "in": "body",
                    "optional": true,
                    "toInt": true,
                    "isInt": {
                        "errorMessage": [
                            "isInt",
                            "The value of limit argument must be a numeric."
                        ]
                    },
                    "custom": {
                        "errorMessage": [
                            "max",
                            30,
                            "The value of limit argument must be smaller than {max}."
                        ]
                    }
                },
                "status": {
                    "in": "body",
                    "optional": true
                },
                "q": {
                    "in": "body",
                    "optional": true
                }
            }
        },
        {
            "path": "/api/history/list-by-report",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "reId": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Report ID must be provide"
                        ]
                    }
                },
                "before": {
                    "in": "body",
                    "optional": true,
                    "toDate": true,
                    "custom": {
                        "errorMessage": [
                            "isDate",
                            "The value of before argument is not a valid date and time value."
                        ]
                    }
                },
                "after": {
                    "in": "body",
                    "optional": true,
                    "toDate": true,
                    "custom": {
                        "errorMessage": [
                            "isDate",
                            "The value of before argument is not a valid date and time value."
                        ]
                    }
                },
                "limit": {
                    "in": "body",
                    "optional": true,
                    "toInt": true,
                    "isInt": {
                        "errorMessage": [
                            "isInt",
                            "The value of limit argument must be a numeric."
                        ]
                    },
                    "custom": {
                        "errorMessage": [
                            "max",
                            30,
                            "The value of limit argument must be smaller than {max}."
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/history",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST",
                    "validationSchema": {
                        "before": {
                            "in": "body",
                            "optional": true,
                            "toDate": true,
                            "custom": {
                                "errorMessage": [
                                    "isDate",
                                    "The value of before argument is not a valid date and time value."
                                ]
                            }
                        },
                        "after": {
                            "in": "body",
                            "optional": true,
                            "toDate": true,
                            "custom": {
                                "errorMessage": [
                                    "isDate",
                                    "The value of before argument is not a valid date and time value."
                                ]
                            }
                        },
                        "limit": {
                            "in": "body",
                            "optional": true,
                            "toInt": true,
                            "isInt": {
                                "errorMessage": [
                                    "isInt",
                                    "The value of limit argument must be a numeric."
                                ]
                            },
                            "custom": {
                                "errorMessage": [
                                    "max",
                                    30,
                                    "The value of limit argument must be smaller than {max}."
                                ]
                            }
                        },
                        "status": {
                            "in": "body",
                            "optional": true
                        },
                        "q": {
                            "in": "body",
                            "optional": true
                        }
                    }
                },
                {
                    "name": "list-by-report",
                    "type": "POST",
                    "validationSchema": {
                        "reId": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Report ID must be provide"
                                ]
                            }
                        },
                        "before": {
                            "in": "body",
                            "optional": true,
                            "toDate": true,
                            "custom": {
                                "errorMessage": [
                                    "isDate",
                                    "The value of before argument is not a valid date and time value."
                                ]
                            }
                        },
                        "after": {
                            "in": "body",
                            "optional": true,
                            "toDate": true,
                            "custom": {
                                "errorMessage": [
                                    "isDate",
                                    "The value of before argument is not a valid date and time value."
                                ]
                            }
                        },
                        "limit": {
                            "in": "body",
                            "optional": true,
                            "toInt": true,
                            "isInt": {
                                "errorMessage": [
                                    "isInt",
                                    "The value of limit argument must be a numeric."
                                ]
                            },
                            "custom": {
                                "errorMessage": [
                                    "max",
                                    30,
                                    "The value of limit argument must be smaller than {max}."
                                ]
                            }
                        }
                    }
                }
            ]
        },
        {
            "path": "/api/location/list",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/location/get-by-id",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "ID must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/location/add",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/location/update",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "ID must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/location/remove",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "ID must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/location/active",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "ID must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/location/inactive",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "ID must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/location",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST"
                },
                {
                    "name": "get-by-id",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "ID must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "add",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cga"
                    ]
                },
                {
                    "name": "update",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "ID must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "remove",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cga"
                    ],
                    "validationSchema": {
                        "id": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "ID must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "active",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cga"
                    ],
                    "validationSchema": {
                        "id": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "ID must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "inactive",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cga"
                    ],
                    "validationSchema": {
                        "id": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "ID must be provided"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        {
            "path": "/api/log/list",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/log/remove",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/log/user-monthly",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "date": {
                    "in": "body",
                    "optional": true,
                    "toDate": true,
                    "custom": {
                        "errorMessage": [
                            "isDate",
                            "The value of date argument is not a valid date and time value."
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/log",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                },
                {
                    "name": "remove",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                },
                {
                    "name": "user-monthly",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "date": {
                            "in": "body",
                            "optional": true,
                            "toDate": true,
                            "custom": {
                                "errorMessage": [
                                    "isDate",
                                    "The value of date argument is not a valid date and time value."
                                ]
                            }
                        }
                    }
                }
            ]
        },
        {
            "path": "/api/passwordrequest/list",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/passwordrequest/get-by-code",
            "method": "POST",
            "authorized": false,
            "validationSchema": {
                "code": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Code of PasswordRequest must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/passwordrequest",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                },
                {
                    "name": "get-by-code",
                    "type": "POST",
                    "authorized": false,
                    "validationSchema": {
                        "code": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Code of PasswordRequest must be provided"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        {
            "path": "/api/paymenthistory/list",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "location": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "location must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/paymenthistory/get-by-id",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": [
                        "body",
                        "params"
                    ],
                    "isString": {
                        "errorMessage": [
                            "isString",
                            "Id is invalid"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/paymenthistory/add",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/paymenthistory/update",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/paymenthistory",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST",
                    "validationSchema": {
                        "location": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "location must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "get-by-id",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": [
                                "body",
                                "params"
                            ],
                            "isString": {
                                "errorMessage": [
                                    "isString",
                                    "Id is invalid"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "add",
                    "type": "POST"
                },
                {
                    "name": "update",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Id must be provided"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        {
            "path": "/api/project/list",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "location": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "location must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/project/get-by-id",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": [
                        "body",
                        "params"
                    ],
                    "isString": {
                        "errorMessage": [
                            "isString",
                            "Id is invalid"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/project/add",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/project/update",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/project/active",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "ID must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/project/inactive",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "ID must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/project",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST",
                    "validationSchema": {
                        "location": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "location must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "get-by-id",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": [
                                "body",
                                "params"
                            ],
                            "isString": {
                                "errorMessage": [
                                    "isString",
                                    "Id is invalid"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "add",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                },
                {
                    "name": "update",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "active",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "ID must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "inactive",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "ID must be provided"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        {
            "path": "/api/reimbursement/list",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/reimbursement/get-by-id",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "reId": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Report ID must be provide"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/reimbursement/approval-by-other",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "q": {
                    "in": "body",
                    "trim": {
                        "options": " "
                    }
                },
                "location": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Location must be provide"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/reimbursement/list-by-reviewer",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "q": {
                    "in": "body",
                    "trim": {
                        "options": " "
                    }
                },
                "location": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Location must be provide"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/reimbursement/approval-by-user",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "q": {
                    "in": "body",
                    "trim": {
                        "options": " "
                    }
                },
                "location": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Location must be provide"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/reimbursement/complete",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "q": {
                    "in": "body",
                    "trim": {
                        "options": " "
                    }
                },
                "location": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Location must be provide"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/reimbursement/request",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "q": {
                    "in": "body",
                    "trim": {
                        "options": " "
                    }
                }
            }
        },
        {
            "path": "/api/reimbursement/add",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "action": {
                    "isIn": {
                        "options": [
                            [
                                "saveDraft",
                                "submit"
                            ]
                        ],
                        "errorMessage": [
                            "isIn",
                            "saveDraft, submit",
                            "Action (action) argument must be one of the words: '{isIn}'"
                        ]
                    },
                    "trim": {
                        "options": " "
                    }
                }
            }
        },
        {
            "path": "/api/reimbursement/update",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Report ID must be provide"
                        ]
                    }
                },
                "action": {
                    "isIn": {
                        "options": [
                            [
                                "saveDraft",
                                "submit"
                            ]
                        ],
                        "errorMessage": [
                            "isIn",
                            "saveDraft, submit",
                            "Action (action) argument must be one of the words: '{isIn}'"
                        ]
                    },
                    "trim": {
                        "options": " "
                    }
                }
            }
        },
        {
            "path": "/api/reimbursement/remove",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "reId": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Report ID must be provide"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/reimbursement/review",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "reId": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Report ID must be provide"
                        ]
                    }
                },
                "action": {
                    "in": "body",
                    "isIn": {
                        "options": [
                            [
                                "approve",
                                "reject",
                                "inquiry"
                            ]
                        ],
                        "errorMessage": [
                            "isIn",
                            "approve, reject, inquiry",
                            "Action (action) argument must be one of the words: '{0}'"
                        ]
                    },
                    "trim": {
                        "options": " "
                    }
                }
            }
        },
        {
            "path": "/api/reimbursement/review-multiple",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "reIds": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Report IDs must be provide"
                        ]
                    }
                },
                "action": {
                    "in": "body",
                    "isIn": {
                        "options": [
                            [
                                "approve",
                                "inquiry",
                                "reject"
                            ]
                        ],
                        "errorMessage": [
                            "isIn",
                            "approve, inquiry, reject",
                            "Action (action) argument must be one of the words: '{0}'"
                        ]
                    },
                    "trim": {
                        "options": " "
                    }
                }
            }
        },
        {
            "path": "/api/reimbursement/report-monthly",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "date": {
                    "in": "body",
                    "optional": true,
                    "toDate": true,
                    "custom": {
                        "errorMessage": [
                            "isDate",
                            "The value of date argument is not a valid date and time value."
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/reimbursement/report-last-30-days",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/reimbursement/summary",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/reimbursement/summary-approval",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/reimbursement/force-update-expense",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "date": {
                    "in": "body",
                    "optional": true,
                    "customSanitizer": {},
                    "custom": {
                        "errorMessage": [
                            "isDate",
                            "Date is invalid"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/reimbursement/comment",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "reId": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Report ID must be provide"
                        ]
                    }
                },
                "message": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "message must be provide"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/reimbursement/update-empty-date-report",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/reimbursement",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST"
                },
                {
                    "name": "get-by-id",
                    "type": "POST",
                    "validationSchema": {
                        "reId": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Report ID must be provide"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "approval-by-other",
                    "type": "POST",
                    "validationSchema": {
                        "q": {
                            "in": "body",
                            "trim": {
                                "options": " "
                            }
                        },
                        "location": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Location must be provide"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "list-by-reviewer",
                    "type": "POST",
                    "validationSchema": {
                        "q": {
                            "in": "body",
                            "trim": {
                                "options": " "
                            }
                        },
                        "location": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Location must be provide"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "approval-by-user",
                    "type": "POST",
                    "validationSchema": {
                        "q": {
                            "in": "body",
                            "trim": {
                                "options": " "
                            }
                        },
                        "location": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Location must be provide"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "complete",
                    "type": "POST",
                    "validationSchema": {
                        "q": {
                            "in": "body",
                            "trim": {
                                "options": " "
                            }
                        },
                        "location": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Location must be provide"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "request",
                    "type": "POST",
                    "validationSchema": {
                        "q": {
                            "in": "body",
                            "trim": {
                                "options": " "
                            }
                        }
                    }
                },
                {
                    "name": "add",
                    "type": "POST",
                    "validationSchema": {
                        "action": {
                            "isIn": {
                                "options": [
                                    [
                                        "saveDraft",
                                        "submit"
                                    ]
                                ],
                                "errorMessage": [
                                    "isIn",
                                    "saveDraft, submit",
                                    "Action (action) argument must be one of the words: '{isIn}'"
                                ]
                            },
                            "trim": {
                                "options": " "
                            }
                        }
                    }
                },
                {
                    "name": "update",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Report ID must be provide"
                                ]
                            }
                        },
                        "action": {
                            "isIn": {
                                "options": [
                                    [
                                        "saveDraft",
                                        "submit"
                                    ]
                                ],
                                "errorMessage": [
                                    "isIn",
                                    "saveDraft, submit",
                                    "Action (action) argument must be one of the words: '{isIn}'"
                                ]
                            },
                            "trim": {
                                "options": " "
                            }
                        }
                    }
                },
                {
                    "name": "remove",
                    "type": "POST",
                    "validationSchema": {
                        "reId": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Report ID must be provide"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "review",
                    "type": "POST",
                    "validationSchema": {
                        "reId": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Report ID must be provide"
                                ]
                            }
                        },
                        "action": {
                            "in": "body",
                            "isIn": {
                                "options": [
                                    [
                                        "approve",
                                        "reject",
                                        "inquiry"
                                    ]
                                ],
                                "errorMessage": [
                                    "isIn",
                                    "approve, reject, inquiry",
                                    "Action (action) argument must be one of the words: '{0}'"
                                ]
                            },
                            "trim": {
                                "options": " "
                            }
                        }
                    }
                },
                {
                    "name": "review-multiple",
                    "type": "POST",
                    "validationSchema": {
                        "reIds": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Report IDs must be provide"
                                ]
                            }
                        },
                        "action": {
                            "in": "body",
                            "isIn": {
                                "options": [
                                    [
                                        "approve",
                                        "inquiry",
                                        "reject"
                                    ]
                                ],
                                "errorMessage": [
                                    "isIn",
                                    "approve, inquiry, reject",
                                    "Action (action) argument must be one of the words: '{0}'"
                                ]
                            },
                            "trim": {
                                "options": " "
                            }
                        }
                    }
                },
                {
                    "name": "report-monthly",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "date": {
                            "in": "body",
                            "optional": true,
                            "toDate": true,
                            "custom": {
                                "errorMessage": [
                                    "isDate",
                                    "The value of date argument is not a valid date and time value."
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "report-last-30-days",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                },
                {
                    "name": "summary",
                    "type": "POST"
                },
                {
                    "name": "summary-approval",
                    "type": "POST"
                },
                {
                    "name": "force-update-expense",
                    "type": "POST",
                    "body": [
                        {
                            "name": "expenseID"
                        }
                    ],
                    "validationSchema": {
                        "date": {
                            "in": "body",
                            "optional": true,
                            "customSanitizer": {},
                            "custom": {
                                "errorMessage": [
                                    "isDate",
                                    "Date is invalid"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "comment",
                    "type": "POST",
                    "validationSchema": {
                        "reId": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Report ID must be provide"
                                ]
                            }
                        },
                        "message": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "message must be provide"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "update-empty-date-report",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                }
            ]
        },
        {
            "path": "/api/role/list",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/role/list-admin-roles",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/role/get-by-id",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/role/add",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/role/update",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/role/remove",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/role/init-default",
            "method": "POST",
            "authorized": false,
            "validationSchema": {
                "security": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "security must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/role/drop-collection",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "security": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "security must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/role/read-debug-log",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "security": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "security must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/role/force-delete-location",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "security": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "security must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/role/force-delete-company",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "security": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "security must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/role",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                },
                {
                    "name": "list-admin-roles",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cga"
                    ]
                },
                {
                    "name": "get-by-id",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "add",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                },
                {
                    "name": "update",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "remove",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "init-default",
                    "type": "POST",
                    "authorized": false,
                    "validationSchema": {
                        "security": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "security must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "drop-collection",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "security": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "security must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "read-debug-log",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "security": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "security must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "force-delete-location",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "security": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "security must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "force-delete-company",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "security": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "security must be provided"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        {
            "path": "/api/setting/list",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/setting/get-by-id",
            "method": "POST",
            "authorized": false,
            "validationSchema": {
                "id": {
                    "in": [
                        "body",
                        "params"
                    ],
                    "isString": {
                        "errorMessage": [
                            "isString",
                            "Id is invalid"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/setting/add",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/setting/update",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/setting/remove",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/setting",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST"
                },
                {
                    "name": "get-by-id",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": [
                                "body",
                                "params"
                            ],
                            "isString": {
                                "errorMessage": [
                                    "isString",
                                    "Id is invalid"
                                ]
                            }
                        }
                    },
                    "authorized": false
                },
                {
                    "name": "add",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                },
                {
                    "name": "update",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Id must be provided"
                                ]
                            }
                        }
                    },
                    "swagger": [
                        {
                            "name": "id",
                            "type": "string",
                            "required": true
                        }
                    ]
                },
                {
                    "name": "remove",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                }
            ]
        },
        {
            "path": "/api/suiteedition/list",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/suiteedition/get-by-id",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": [
                        "body",
                        "params"
                    ],
                    "isString": {
                        "errorMessage": [
                            "isString",
                            "Id is invalid"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/suiteedition/add",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/suiteedition/update",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/suiteedition/remove",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/suiteedition",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                },
                {
                    "name": "get-by-id",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": [
                                "body",
                                "params"
                            ],
                            "isString": {
                                "errorMessage": [
                                    "isString",
                                    "Id is invalid"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "add",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                },
                {
                    "name": "update",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Id must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "remove",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                }
            ]
        },
        {
            "path": "/api/tag/list",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/tag/get-by-id",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/tag/add",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/tag",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST"
                },
                {
                    "name": "get-by-id",
                    "type": "POST"
                },
                {
                    "name": "add",
                    "type": "POST"
                }
            ]
        },
        {
            "path": "/api/transaction/list",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/transaction/get-by-id",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": [
                        "body",
                        "params"
                    ],
                    "isString": {
                        "errorMessage": [
                            "isString",
                            "Id is invalid"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/transaction/add",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/transaction/update",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/transaction",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cb"
                    ]
                },
                {
                    "name": "get-by-id",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": [
                                "body",
                                "params"
                            ],
                            "isString": {
                                "errorMessage": [
                                    "isString",
                                    "Id is invalid"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "add",
                    "type": "POST"
                },
                {
                    "name": "update",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Id must be provided"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        {
            "path": "/api/type/list",
            "method": "GET",
            "authorized": true
        },
        {
            "path": "/api/type/list-all",
            "method": "GET",
            "authorized": true
        },
        {
            "path": "/api/type/add",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "type": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Type title must be provided"
                        ]
                    },
                    "trim": {
                        "options": " "
                    }
                }
            }
        },
        {
            "path": "/api/type/update",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Id must be provided"
                        ]
                    }
                },
                "type": {
                    "in": "body",
                    "isEmpty": {
                        "errorMessage": "Type title must be provided",
                        "negated": true
                    },
                    "trim": {
                        "options": " "
                    }
                }
            }
        },
        {
            "path": "/api/type/remove",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/type",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "GET"
                },
                {
                    "name": "list-all",
                    "type": "GET",
                    "possiblePers": [
                        "manage-type"
                    ]
                },
                {
                    "name": "add",
                    "type": "POST",
                    "possiblePers": [
                        "manage-type"
                    ],
                    "validationSchema": {
                        "type": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Type title must be provided"
                                ]
                            },
                            "trim": {
                                "options": " "
                            }
                        }
                    }
                },
                {
                    "name": "update",
                    "type": "POST",
                    "possiblePers": [
                        "manage-type"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Id must be provided"
                                ]
                            }
                        },
                        "type": {
                            "in": "body",
                            "isEmpty": {
                                "errorMessage": "Type title must be provided",
                                "negated": true
                            },
                            "trim": {
                                "options": " "
                            }
                        }
                    }
                },
                {
                    "name": "remove",
                    "type": "POST",
                    "possiblePers": [
                        "manage-type"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Id must be provided"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        {
            "path": "/api/useractivity/list",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/useractivity/get-by-id",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": [
                        "body",
                        "params"
                    ],
                    "isString": {
                        "errorMessage": [
                            "isString",
                            "Id is invalid"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/useractivity/add",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/useractivity/update",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "Id must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/useractivity/remove",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/useractivity",
            "method": "POST",
            "methods": [
                {
                    "name": "list",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                },
                {
                    "name": "get-by-id",
                    "type": "POST",
                    "validationSchema": {
                        "id": {
                            "in": [
                                "body",
                                "params"
                            ],
                            "isString": {
                                "errorMessage": [
                                    "isString",
                                    "Id is invalid"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "add",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                },
                {
                    "name": "update",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "Id must be provided"
                                ]
                            }
                        }
                    },
                    "swagger": [
                        {
                            "name": "id",
                            "type": "string",
                            "required": true
                        }
                    ]
                },
                {
                    "name": "remove",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                }
            ]
        },
        {
            "path": "/api/useradmin/get-current-user",
            "method": "GET",
            "authorized": true
        },
        {
            "path": "/api/useradmin/list-all",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/useradmin/update-profile",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/useradmin/add",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "email": {
                    "normalizeEmail": true,
                    "isEmail": {
                        "errorMessage": "Please provide a valid email."
                    },
                    "isLength": {
                        "options": {
                            "max": 255
                        },
                        "errorMessage": [
                            "max",
                            255,
                            "Email must be contained the most {max} characters."
                        ]
                    }
                },
                "password": {
                    "isString": {
                        "errorMessage": [
                            "required",
                            "Password must be provided."
                        ]
                    },
                    "isLength": {
                        "options": {
                            "min": 6
                        },
                        "errorMessage": [
                            "min",
                            6,
                            "Password must be contained at least {min} characters."
                        ]
                    }
                },
                "firstName": {
                    "isString": {
                        "errorMessage": [
                            "isString",
                            "Please provide a valid first name."
                        ]
                    },
                    "trim": {
                        "options": " "
                    },
                    "isLength": {
                        "options": {
                            "max": 50
                        },
                        "errorMessage": [
                            "max",
                            50,
                            "First name must be contained the most {max} characters."
                        ]
                    }
                },
                "roles": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "roles must be provided"
                        ]
                    }
                },
                "permission": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "permission must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/useradmin/update",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "id must be provided"
                        ]
                    }
                },
                "roles": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "roles must be provided"
                        ]
                    }
                },
                "permission": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "permission must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/useradmin/active",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "id must be provided"
                        ]
                    }
                },
                "permission": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "permission must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/useradmin/inactive",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "id must be provided"
                        ]
                    }
                },
                "permission": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "permission must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/useradmin/remove",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "id must be provided"
                        ]
                    }
                },
                "permission": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "permission must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/useradmin",
            "method": "POST",
            "methods": [
                {
                    "name": "get-current-user",
                    "type": "GET"
                },
                {
                    "name": "list-all",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                },
                {
                    "name": "update-profile",
                    "type": "POST"
                },
                {
                    "name": "add",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cga"
                    ],
                    "validationSchema": {
                        "email": {
                            "normalizeEmail": true,
                            "isEmail": {
                                "errorMessage": "Please provide a valid email."
                            },
                            "isLength": {
                                "options": {
                                    "max": 255
                                },
                                "errorMessage": [
                                    "max",
                                    255,
                                    "Email must be contained the most {max} characters."
                                ]
                            }
                        },
                        "password": {
                            "isString": {
                                "errorMessage": [
                                    "required",
                                    "Password must be provided."
                                ]
                            },
                            "isLength": {
                                "options": {
                                    "min": 6
                                },
                                "errorMessage": [
                                    "min",
                                    6,
                                    "Password must be contained at least {min} characters."
                                ]
                            }
                        },
                        "firstName": {
                            "isString": {
                                "errorMessage": [
                                    "isString",
                                    "Please provide a valid first name."
                                ]
                            },
                            "trim": {
                                "options": " "
                            },
                            "isLength": {
                                "options": {
                                    "max": 50
                                },
                                "errorMessage": [
                                    "max",
                                    50,
                                    "First name must be contained the most {max} characters."
                                ]
                            }
                        },
                        "roles": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "roles must be provided"
                                ]
                            }
                        },
                        "permission": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "permission must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "update",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cga"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "id must be provided"
                                ]
                            }
                        },
                        "roles": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "roles must be provided"
                                ]
                            }
                        },
                        "permission": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "permission must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "active",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "id must be provided"
                                ]
                            }
                        },
                        "permission": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "permission must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "inactive",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "id must be provided"
                                ]
                            }
                        },
                        "permission": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "permission must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "remove",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "id must be provided"
                                ]
                            }
                        },
                        "permission": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "permission must be provided"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        {
            "path": "/api/user/get-current-user",
            "method": "GET",
            "authorized": true
        },
        {
            "path": "/api/user/register-fcm-token",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/user/update",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/user/list",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/user/list-all",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/user/add-employee",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "email": {
                    "normalizeEmail": true,
                    "isEmail": {
                        "errorMessage": "Please provide a valid email."
                    },
                    "isLength": {
                        "options": {
                            "max": 255
                        },
                        "errorMessage": [
                            "max",
                            255,
                            "Email must be contained the most {max} characters."
                        ]
                    }
                },
                "password": {
                    "isString": {
                        "errorMessage": [
                            "required",
                            "Password must be provided."
                        ]
                    },
                    "isLength": {
                        "options": {
                            "min": 6
                        },
                        "errorMessage": [
                            "min",
                            6,
                            "Password must be contained at least {min} characters."
                        ]
                    }
                },
                "firstName": {
                    "isString": {
                        "errorMessage": [
                            "isString",
                            "Please provide a valid first name."
                        ]
                    },
                    "trim": {
                        "options": " "
                    },
                    "isLength": {
                        "options": {
                            "max": 50
                        },
                        "errorMessage": [
                            "max",
                            50,
                            "First name must be contained the most {max} characters."
                        ]
                    }
                },
                "location": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "location must be provided"
                        ]
                    }
                },
                "permission": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "permission must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/user/update-employee",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "id must be provided"
                        ]
                    }
                },
                "permission": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "permission must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/user/active",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "id must be provided"
                        ]
                    }
                },
                "permission": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "permission must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/user/inactive",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "id must be provided"
                        ]
                    }
                },
                "permission": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "permission must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/user/remove",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "id": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "id must be provided"
                        ]
                    }
                },
                "permission": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "permission must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/user/count-overall",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/user/sync-employee",
            "method": "POST",
            "authorized": true
        },
        {
            "path": "/api/user/import-employee",
            "method": "POST",
            "authorized": true,
            "validationSchema": {
                "employees": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "employees must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/get-company-code",
            "method": "POST",
            "authorized": false,
            "isRoot": true,
            "validationSchema": {
                "email": {
                    "in": "body",
                    "exists": {
                        "errorMessage": [
                            "required",
                            "email must be provided"
                        ]
                    }
                }
            }
        },
        {
            "path": "/api/user",
            "method": "POST",
            "methods": [
                {
                    "name": "get-current-user",
                    "type": "GET"
                },
                {
                    "name": "register-fcm-token",
                    "type": "POST"
                },
                {
                    "name": "update",
                    "type": "POST"
                },
                {
                    "name": "list",
                    "type": "POST"
                },
                {
                    "name": "list-all",
                    "type": "POST"
                },
                {
                    "name": "add-employee",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "email": {
                            "normalizeEmail": true,
                            "isEmail": {
                                "errorMessage": "Please provide a valid email."
                            },
                            "isLength": {
                                "options": {
                                    "max": 255
                                },
                                "errorMessage": [
                                    "max",
                                    255,
                                    "Email must be contained the most {max} characters."
                                ]
                            }
                        },
                        "password": {
                            "isString": {
                                "errorMessage": [
                                    "required",
                                    "Password must be provided."
                                ]
                            },
                            "isLength": {
                                "options": {
                                    "min": 6
                                },
                                "errorMessage": [
                                    "min",
                                    6,
                                    "Password must be contained at least {min} characters."
                                ]
                            }
                        },
                        "firstName": {
                            "isString": {
                                "errorMessage": [
                                    "isString",
                                    "Please provide a valid first name."
                                ]
                            },
                            "trim": {
                                "options": " "
                            },
                            "isLength": {
                                "options": {
                                    "max": 50
                                },
                                "errorMessage": [
                                    "max",
                                    50,
                                    "First name must be contained the most {max} characters."
                                ]
                            }
                        },
                        "location": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "location must be provided"
                                ]
                            }
                        },
                        "permission": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "permission must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "update-employee",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "id must be provided"
                                ]
                            }
                        },
                        "permission": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "permission must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "active",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "id must be provided"
                                ]
                            }
                        },
                        "permission": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "permission must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "inactive",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "id must be provided"
                                ]
                            }
                        },
                        "permission": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "permission must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "remove",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ],
                    "validationSchema": {
                        "id": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "id must be provided"
                                ]
                            }
                        },
                        "permission": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "permission must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "count-overall",
                    "type": "POST",
                    "possiblePers": [
                        "admin-sa"
                    ]
                },
                {
                    "name": "sync-employee",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ]
                },
                {
                    "name": "import-employee",
                    "type": "POST",
                    "possiblePers": [
                        "admin-cla"
                    ],
                    "validationSchema": {
                        "employees": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "employees must be provided"
                                ]
                            }
                        }
                    }
                },
                {
                    "name": "get-company-code",
                    "type": "POST",
                    "isRoot": true,
                    "authorized": false,
                    "validationSchema": {
                        "email": {
                            "in": "body",
                            "exists": {
                                "errorMessage": [
                                    "required",
                                    "email must be provided"
                                ]
                            }
                        }
                    }
                }
            ]
        }
    ]
}
